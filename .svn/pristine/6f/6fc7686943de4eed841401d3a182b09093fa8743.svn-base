package com.nexteducation.NextConfig.module.service.client;

import java.util.Arrays;
import java.util.List;

import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;

import com.nexteducation.NextConfig.module.model.params.CustomField.CustomFormElementAddParams;
import com.nexteducation.NextConfig.module.model.params.CustomField.CustomFormElementFetchParams;
import com.nexteducation.NextConfig.module.model.request.CustomField.CustomFormElementRequest;
import com.nexteducation.NextConfig.module.model.response.JerseyResponse;
import com.nexteducation.NextConfig.module.model.response.CustomField.CustomFormElementResponse;
import com.nexteducation.NextConfig.module.service.core.CustomFormElementService;
import com.nexteducation.NextConfig.util.NextConfigUrls;
import com.nexteducation.NextService.exception.NextServiceExceptionHandler;
import com.nexteducation.NextService.module.filter.queryable.QueryableParams;
import com.nexteducation.NextService.module.model.params.SessionParams;
import com.nexteducation.NextService.module.service.client.RestTemplate;
import com.nexteducation.NextService.util.QueryParamBuilder;

/**
 * The Class CustomFormElementServiceClient.
 */
public class CustomFormElementServiceClient implements CustomFormElementService {

	/** The server url. */
	private String serverUrl = NextConfigUrls.SERVER_URL;

	/**
	 * Instantiates a new custom form element service client.
	 *
	 * @param serverUrl the server url
	 */
	public CustomFormElementServiceClient(final String serverUrl) {
		this.serverUrl = serverUrl;
	}

	/**
	 * Adds the custom form elements.
	 *
	 * @param customFormElementAddParams the custom form element add params
	 * @param sessionParams the session params
	 * @param customFormElementRequest the custom form element request
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse addCustomFormElements(CustomFormElementAddParams customFormElementAddParams,
			SessionParams sessionParams, CustomFormElementRequest customFormElementRequest) {
		final String REST_URI = serverUrl + NextConfigUrls.V1 + NextConfigUrls.CUSTOM_FIELDS_MAPPING;
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		final HttpEntity<Object> requestEntity = new HttpEntity<Object>(customFormElementRequest, headers);
		ResponseEntity<JerseyResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.POST, requestEntity,
				new ParameterizedTypeReference<JerseyResponse>() {
				});
		return responseEntity.getBody();
	}

	/**
	 * Delete custom form elements.
	 *
	 * @param customFormElementId the custom form element id
	 * @param sessionParams the session params
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse deleteCustomFormElements(Long customFormElementId, SessionParams sessionParams) {
		final String REST_URI = serverUrl + NextConfigUrls.V1 + NextConfigUrls.CUSTOM_FIELDS_MAPPING + "/"
				+ customFormElementId;
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		ResponseEntity<JerseyResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.DELETE, null,
				new ParameterizedTypeReference<JerseyResponse>() {
				});
		return responseEntity.getBody();
	}

	/**
	 * Fetch custom form elements.
	 *
	 * @param customFormElementFetchParams the custom form element fetch params
	 * @param sessionParams the session params
	 * @param queryable the queryable
	 * @return the list
	 */
	@Override
	public List<CustomFormElementResponse> fetchCustomFormElements(
			CustomFormElementFetchParams customFormElementFetchParams, SessionParams sessionParams,
			QueryableParams queryable) {
		final String REST_URI = serverUrl + NextConfigUrls.V1 + NextConfigUrls.CUSTOM_FIELDS_MAPPING;
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		List<Object> objects = Arrays.asList(sessionParams, customFormElementFetchParams, queryable);
		ResponseEntity<List<CustomFormElementResponse>> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(objects, REST_URI), HttpMethod.GET, null,
				new ParameterizedTypeReference<List<CustomFormElementResponse>>() {
				});
		return responseEntity.getBody();
	}

	/**
	 * Toggle custom form elements.
	 *
	 * @param customFormElementId the custom form element id
	 * @param sessionParams the session params
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse toggleCustomFormElements(Long customFormElementId, SessionParams sessionParams) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Fetch custom form elements.
	 *
	 * @param customFormElementId the custom form element id
	 * @param sessionParams the session params
	 * @return the custom form element response
	 */
	@Override
	public CustomFormElementResponse fetchCustomFormElements(Long customFormElementId, SessionParams sessionParams) {
		final String REST_URI = serverUrl + NextConfigUrls.V1 + NextConfigUrls.CUSTOM_FIELDS_MAPPING + "/"
				+ customFormElementId;
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		List<Object> objects = Arrays.asList(sessionParams);
		ResponseEntity<CustomFormElementResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(objects, REST_URI), HttpMethod.GET, null,
				new ParameterizedTypeReference<CustomFormElementResponse>() {
				});
		return responseEntity.getBody();
	}

	/**
	 * Adds the or update custom form elements.
	 *
	 * @param customFormElementAddParams the custom form element add params
	 * @param sessionParams the session params
	 * @param customFormElementRequests the custom form element requests
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse addOrUpdateCustomFormElements(CustomFormElementAddParams customFormElementAddParams,
			SessionParams sessionParams, List<CustomFormElementRequest> customFormElementRequests) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Update hide status.
	 *
	 * @param customFormElementId the custom form element id
	 * @param sessionParams the session params
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse updateHideStatus(Long customFormElementId, SessionParams sessionParams) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Update mandatory status.
	 *
	 * @param customFormElementId the custom form element id
	 * @param sessionParams the session params
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse updateMandatoryStatus(Long customFormElementId, SessionParams sessionParams) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Update custom form elements.
	 *
	 * @param customFormElementId the custom form element id
	 * @param key the key
	 * @param sessionParams the session params
	 * @param customFormElementRequests the custom form element requests
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse updateCustomFormElements(Long customFormElementId, String key, SessionParams sessionParams,
			CustomFormElementRequest customFormElementRequests) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Adds the custom form elements.
	 *
	 * @param customFormElementAddParams the custom form element add params
	 * @param sessionParams the session params
	 * @param customFormElementRequests the custom form element requests
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse addCustomFormElements(CustomFormElementAddParams customFormElementAddParams,
			SessionParams sessionParams, List<CustomFormElementRequest> customFormElementRequests) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Adds the custom field in all forms.
	 *
	 * @param customFieldId the custom field id
	 * @param sessionParams the session params
	 * @return the jersey response
	 */
	@Override
	public JerseyResponse addCustomFieldInAllForms(Long customFieldId, SessionParams sessionParams) {
		// TODO Auto-generated method stub
		return null;
	}

}
