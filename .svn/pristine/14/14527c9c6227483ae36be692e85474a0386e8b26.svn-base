package com.nexteducation.NextConfig.module.repository.custom.impl;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.nexteducation.NextConfig.module.model.bo.CustomField;
import com.nexteducation.NextConfig.module.model.params.CustomField.CustomFieldFetchParams;
import com.nexteducation.NextConfig.module.repository.custom.core.CustomFieldRepositoryCustom;
import com.nexteducation.NextConfig.util.ERPApp;
import com.nexteducation.NextService.module.filter.queryable.QueryableParams;

@Repository
public class CustomFieldRepositoryImpl implements CustomFieldRepositoryCustom {

	@PersistenceContext
	private EntityManager entityManager;

	@Override
	public List<CustomField> findByBOFilters(CustomFieldFetchParams customFieldFetchParams,
			QueryableParams queryableParams) {
		final StringBuilder builder = new StringBuilder(" select distinct cf from CustomField cf ");
		if (customFieldFetchParams.getFetch() != null && !customFieldFetchParams.getFetch().isEmpty()) {
			if (containsCaseInsensitive("custom_field_lists", customFieldFetchParams.getFetch())) {
				builder.append(" left join fetch cf.customFieldLists cfcfl ");
			}
			if (containsCaseInsensitive("custom_form_elements", customFieldFetchParams.getFetch())) {
				builder.append(" left join fetch cf.customFormElements cfcfe ");
			}
		}
		builder.append(" where 1 = 1 ");
		if (!ERPApp.isEmptyObject(customFieldFetchParams.getBranchId())) {
			builder.append(" and cf.branchId = :branchId ");
		}
		if (!ERPApp.isEmptyObject(customFieldFetchParams.getEntityName())) {
			builder.append(" and cf.entityName = :entityName ");
		}
		final TypedQuery<CustomField> query = entityManager.createQuery(builder.toString(), CustomField.class);
		if (!ERPApp.isEmptyObject(customFieldFetchParams.getBranchId())) {
			query.setParameter("branchId", customFieldFetchParams.getBranchId());
		}
		if (!ERPApp.isEmptyObject(customFieldFetchParams.getEntityName())) {
			query.setParameter("entityName", customFieldFetchParams.getEntityName());
		}
		List<CustomField> customField = query.getResultList();
		return customField;
	}

	private boolean containsCaseInsensitive(String s, List<String> l) {
		for (String string : l) {
			if (string.equalsIgnoreCase(s)) {
				return true;
			}
		}
		return false;
	}

}
