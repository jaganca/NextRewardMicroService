package com.nexteducation.NextConfig.module.service.client;

import java.util.Arrays;
import java.util.List;

import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;

import com.nexteducation.NextConfig.module.model.enums.Type;
import com.nexteducation.NextConfig.module.model.params.AutoNumbering.AutoNumberingDeleteContextParams;
import com.nexteducation.NextConfig.module.model.params.AutoNumbering.AutoNumberingFetchParams;
import com.nexteducation.NextConfig.module.model.params.AutoNumbering.AutoNumberingUpdateContextParams;
import com.nexteducation.NextConfig.module.model.request.AutoNumbering.AutoNumberingAddRequest;
import com.nexteducation.NextConfig.module.model.request.AutoNumbering.AutoNumberingGenerateRequest;
import com.nexteducation.NextConfig.module.model.request.AutoNumbering.AutoNumberingUpdateRequest;
import com.nexteducation.NextConfig.module.model.response.AddResponse;
import com.nexteducation.NextConfig.module.model.response.AutoNumberingResponse;
import com.nexteducation.NextConfig.module.model.response.JerseyResponse;
import com.nexteducation.NextConfig.module.service.core.AutoNumberingService;
import com.nexteducation.NextConfig.util.NextConfigUrls;
import com.nexteducation.NextService.exception.NextServiceException;
import com.nexteducation.NextService.exception.NextServiceExceptionHandler;
import com.nexteducation.NextService.module.filter.queryable.QueryableParams;
import com.nexteducation.NextService.module.model.params.SessionParams;
import com.nexteducation.NextService.module.service.client.RestTemplate;
import com.nexteducation.NextService.util.QueryParamBuilder;

public class AutoNumberingServiceClient implements AutoNumberingService{
	

	private String serverUrl = NextConfigUrls.SERVER_URL;
	
	public AutoNumberingServiceClient(final String serverUrl) {
		this.serverUrl = serverUrl;
	}
	
	@Override
	public AddResponse addAutoNumberings(SessionParams sessionParams, QueryableParams queryable,
			AutoNumberingAddRequest autoNumberingAddRequest) throws NextServiceException{
		final String REST_URI = serverUrl + NextConfigUrls.V1 + NextConfigUrls.AUTO_NUMBERING;
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		final HttpEntity<Object> requestEntity = new HttpEntity<Object>(autoNumberingAddRequest,headers);
		ResponseEntity<AddResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.POST, requestEntity,
				new ParameterizedTypeReference<AddResponse>() {
				});
		return responseEntity.getBody();
		
	}

	@Override
	public AutoNumberingResponse generateAutoGeneratedNos(SessionParams sessionParams,
			AutoNumberingGenerateRequest autoNumberingGenerateRequest) throws NextServiceException{
		final String REST_URI = serverUrl + NextConfigUrls.V1 + NextConfigUrls.AUTO_NUMBERING_GENERATE;
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		final HttpEntity<Object> requestEntity = new HttpEntity<Object>(autoNumberingGenerateRequest,headers);
		ResponseEntity<AutoNumberingResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.POST, requestEntity,
				new ParameterizedTypeReference<AutoNumberingResponse>() {
				});
		return responseEntity.getBody();
	}

	@Override
	public JerseyResponse updateAutoNumberings(AutoNumberingUpdateContextParams autoNumberingUpdateContextParams,
			SessionParams sessionParams, QueryableParams queryable,
			AutoNumberingUpdateRequest autoNumberingUpdateRequest)throws NextServiceException {
		final String REST_URI =serverUrl + NextConfigUrls.V1 + NextConfigUrls.AUTO_NUMBERING;
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		final HttpEntity<Object> requestEntity = new HttpEntity<Object>(autoNumberingUpdateRequest,headers);
		ResponseEntity<JerseyResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.PUT, requestEntity,
				new ParameterizedTypeReference<JerseyResponse>() {
				});
		return responseEntity.getBody();
	}

	@Override
	public JerseyResponse deleteAutoNumberings(AutoNumberingDeleteContextParams autoNumberingDeleteContextParams,
			SessionParams sessionParams, QueryableParams queryable)throws NextServiceException {
		final String REST_URI = serverUrl + NextConfigUrls.VERSION + NextConfigUrls.AUTO_NUMBERING+"/"+autoNumberingDeleteContextParams.getAutoNumberingId();
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		ResponseEntity<JerseyResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.DELETE,null,
				new ParameterizedTypeReference<JerseyResponse>() {
				});
		return responseEntity.getBody();
	}

	@Override
	public List<AutoNumberingResponse> fetchAutoNumberings(final Type type,SessionParams sessionParams, QueryableParams queryable) throws NextServiceException {
		final String REST_URI = serverUrl + NextConfigUrls.VERSION + NextConfigUrls.AUTO_NUMBERING;
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		List<Object> objects = Arrays.asList(sessionParams, queryable,type); 
		ResponseEntity<List<AutoNumberingResponse>> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(objects, REST_URI), HttpMethod.GET,null,
				new ParameterizedTypeReference<List<AutoNumberingResponse>>() {
				});
		return responseEntity.getBody();
	}
	@Override
	public AutoNumberingResponse fetchAutoNumberings(AutoNumberingFetchParams AutoNumberingFetchParams,
			SessionParams sessionParams, QueryableParams queryable) {
		final String REST_URI =serverUrl + NextConfigUrls.VERSION + NextConfigUrls.AUTO_NUMBERING+"/"+AutoNumberingFetchParams.getAutoNumberingId();
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		ResponseEntity<AutoNumberingResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.GET,null,
				new ParameterizedTypeReference<AutoNumberingResponse>() {
				});
		return responseEntity.getBody();
	}

	@Override
	public AutoNumberingResponse generateAutoGeneratedNosById(AutoNumberingFetchParams AutoNumberingFetchParams,
			SessionParams sessionParams, QueryableParams queryable) {
		final String REST_URI =serverUrl + NextConfigUrls.VERSION + NextConfigUrls.AUTO_NUMBERING_GENERATE+"/"+AutoNumberingFetchParams.getAutoNumberingId();
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		ResponseEntity<AutoNumberingResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.GET,null,
				new ParameterizedTypeReference<AutoNumberingResponse>() {
				});
		return responseEntity.getBody();
	}

	@Override
	public JerseyResponse updateBulkAutoNumberings(SessionParams sessionParams,
			List<AutoNumberingUpdateRequest> autoNumberingUpdateRequests) {
		// TODO Auto-generated method stub
		final String REST_URI =serverUrl + NextConfigUrls.VERSION + NextConfigUrls.AUTO_NUMBERING_BULK;
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		final HttpEntity<Object> requestEntity = new HttpEntity<Object>(autoNumberingUpdateRequests,headers);
		ResponseEntity<JerseyResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.POST, requestEntity,
				new ParameterizedTypeReference<JerseyResponse>() {
				});
		return responseEntity.getBody();
	}

	@Override
	public AutoNumberingResponse generateAutoNumber(SessionParams sessionParams,
			AutoNumberingAddRequest autoNumberingAddRequest) {
		final String REST_URI = serverUrl + NextConfigUrls.V1 + NextConfigUrls.GENERATE_AUTO_NUMBER;
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		final RestTemplate restTemplate = new RestTemplate();
		restTemplate.setErrorHandler(new NextServiceExceptionHandler());
		final HttpEntity<Object> requestEntity = new HttpEntity<Object>(autoNumberingAddRequest,headers);
		ResponseEntity<AutoNumberingResponse> responseEntity = restTemplate.exchange(
				new QueryParamBuilder().build(sessionParams, REST_URI), HttpMethod.POST, requestEntity,
				new ParameterizedTypeReference<AutoNumberingResponse>() {
				});
		return responseEntity.getBody();
	}

}
